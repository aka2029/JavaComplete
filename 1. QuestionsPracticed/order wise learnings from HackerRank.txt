1. got into the basics of "Scanner"
	
	Scanner scanner = new Scanner(System.in);
String myString = scanner.next();
int myInt = scanner.nextInt();
scanner.close();

System.out.println("myString is: " + myString);
System.out.println("myInt is: " + myInt);

--> This is the way to use scanner.

2. While using scanner if we want to skip something then use .skip()
	EG. if i want to input a line of string instead of a single tokken
	then do as given
	
	Scanner scan = new Scanner(System.in);
        int i = scan.nextInt();
        double d = scan.nextDouble();
        scan.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
        String s = scan.nextLine();

--> Here, for having the input of complete line use scan.nextLine() instead
of scan.next() but scan.nextLine() will also take the \n after the previous 
input so to skip this we use "scan.skip(--this is a regex expression--)"

3. Then in "https://www.hackerrank.com/challenges/java-output-formatting/problem"
challenge, we learnt about formating in java using printf()

The best link to refer is "https://www.baeldung.com/java-printstream-printf"

4. learning the use of printf() api in java is very important.

5. To find power of a number eg. 2^3 = 8 use "import java.lang.Math;"
int power = (int)Math.pow(2,3); //power = 8

6. Learn how to use MIN_VALUE and MAX_VALUE function in datatypes 
(https://www.hackerrank.com/challenges/java-datatypes/editorial) question
while refering to their range.

7. The java.util.Scanner.hasNext() method Returns true if this scanner has
 another token in its input. This method may block while waiting for input
 to scan. The scanner does not advance past any input. EG:

String s = "Hello World! 3 + 3.0 = 6";

      // create a new scanner with the specified String Object
      Scanner scanner = new Scanner(s);

      // check if the scanner has a token
      System.out.println("" + scanner.hasNext());

      // print the rest of the string
      System.out.println("" + scanner.nextLine());

      // check if the scanner has a token after printing the line
      System.out.println("" + scanner.hasNext());

      // close the scanner
      scanner.close();

8. Learn the use of java static initializer. Static initialization blocks
 are executed when the class is loaded, and you can initialize static
 variables in those blocks.

9. Integer to String and so on.......
	Convert using Integer.toString(int)

The Integer class has a static method that returns a String object
 representing the specified int parameter.

There are several ways to do this. Refer : 
"https://www.geeksforgeeks.org/different-ways-for-integer-to-string-conversions-in-java/"

10. Calender class in java. 
Refer: "https://www.geeksforgeeks.org/calendar-class-in-java-with-examples/"

But with java 8 we use java.time.LocalDate **VERY CONFUSING** ((TRY LATER))

11. Why use abstract class and what is "ABSTRACTION" 
	REFER: "https://www.javatpoint.com/abstract-class-in-java"

12. There is a subclass of "java.text" class called "NumberFormat" 
i.e. "java.text.NumberFormat" this has many many methods but one of 
them is .getCurrencyInstance()

and "java.util" has a subclass called "java.util.Locale" this sets the 
country inside previous method mentioned as shown below:
NumberFormat us = NumberFormat.getCurrencyInstance(Locale.US);

and the countries that have not been predefined like india then
Locale india = new Locale("en","IN");

then use india instead of Locale.INDIA bec it doesnt exist

13. 